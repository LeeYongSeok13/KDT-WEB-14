<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>동적 폼 전송</title>

    <!-- jquery CDN -->
    <script
      src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
      crossorigin="anonymous"
    ></script>

    <!-- axios CDN -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <style>
      div.result {
        font-size: 24px;
        font-weight: 700;
      }

      .success {
        color: blue;
        font-weight: 700;
      }

      .error {
        color: red;
        font-weight: 700;
      }
    </style>
  </head>
  <body>
    <h1>동적 폼 전송 연습하기!</h1>

    <!-- 이름, 성별을 입력받는 폼 -->
    <form name="register">
      <!-- input 이름 -->
      <label for="name">이름</label>
      <input type="text" name="name" id="name" />

      <!-- input 성별 -->
      <fieldset>
        <legend>성별</legend>
        <input type="radio" name="gender" id="male" value="남자" required />
        <label for="male">남자</label>
        <input type="radio" name="gender" id="female" value="여자" />
        <label for="female">여자</label>
      </fieldset>
      <br />
      <button type="button" onclick="ajaxGet()">Ajax Get 제출</button>
      <button type="button" onclick="ajaxPost()">Ajax Post 제출</button>
      <br />
      <button type="button" onclick="axiosGet()">Axios Get 제출</button>
      <button type="button" onclick="axiosPost()">Axios Post 제출</button>
      <br />
      <button type="button" onclick="fetchGet()">fetch Get 제출</button>
      <button type="button" onclick="fetchPost()">fetch Post 제출</button>
    </form>

    <!-- 동적 폼 전송 결과를 보여줄 곳 -->
    <div class="result"></div>

    <hr />
    <!-- 실습1. axios get 회원가입 -->
    <h2>실습1. axios get 회원가입</h2>
    <form name="practice">
      <!-- input 이름 -->
      <label for="name">이름</label>
      <input type="text" name="name" id="name2" />

      <!-- input 성별 -->
      <fieldset>
        <legend>성별</legend>
        <input type="radio" name="gender" id="male2" value="남자" />
        <label for="male2">남자</label>
        <input type="radio" name="gender" id="female2" value="여자" />
        <label for="female2">여자</label>
      </fieldset>

      <!-- input 생년월일 -->
      <fieldset>
        <legend>생년월일</legend>
        <select name="year" id="year">
          <% for (i = 2000; i < 2025; i++) {%>
          <option value="<%= i %>"><%= i %></option>
          <% } %>
        </select>

        <label for="year">년</label>
        <select name="month" id="month">
          <% for (i = 1; i <= 12; i++) {%>
          <option value="<%= i %>"><%= i %></option>
          <% } %>
        </select>
        <label for="month">월</label>
        <select name="day" id="day">
          <% for (i = 1; i <= 31; i++) {%>
          <option value="<%= i %>"><%= i %></option>
          <% } %>
        </select>
        <label for="day">일</label>
      </fieldset>

      <!-- input 관심사 -->
      <fieldset>
        <legend>관심사</legend>
        <input type="checkbox" name="interest" id="trip" value="여행" />
        <label for="trip">여행</label>
        <input type="checkbox" name="interest" id="fashion" value="패션" />
        <label for="fashion">패션</label>
        <input type="checkbox" name="interest" id="food" value="음식" />
        <label for="food">음식</label>
      </fieldset>

      <br />

      <button type="button" onclick="axiosGetPractice1()">회원가입</button>

      <br />
    </form>
    <!-- 결과를 보여줄 div -->
    <div class="practiceresult"></div>

    <hr />

    <!-- 실습2. axios post 로그인 -->

    <h2>실습2. axios post 로그인</h2>
    <p>(참고) app.js에 저장한 아이디 : banana, 패스워드 : 1234</p>

    <form name="login">
      <label for="username">아이디</label>
      <input type="text" name="username" id="username" required />
      <br />
      <label for="password">비밀번호</label>
      <input type="password" name="password" id="password" required />
      <button type="button" onclick="clickLogin()">로그인</button>
    </form>

    <div class="login-result"></div>

    <script>
      const resultBox = document.querySelector(".result");
      const practiceResult = document.querySelector(".practiceresult");
      const loginResult = document.querySelector(".login-result");
      function ajaxGet() {
        console.log("ajaxGet 함수 호출!");

        // 폼 선택
        const form = document.forms["register"];
        console.log(form);
        console.log(form.name.value); // 이름 입력 값
        console.log(form.gender.value); // 성별 입력 값

        // 요청에 실어서 보낼 데이터 변수 (서버에서 받을 정보)
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // Ajax로 서버에 Get 요청 보내기
        $.ajax({
          type: "get", // 요청의 종류 (=form의 method 속성)
          url: "/ajax", // 요청의 경로 (=form의 action 속성)
          data: data, // 요청에 실어보낼 데이터
          success: function (data) {
            // 요청이 성공적으로 수행되었을 때 실행 될 함수
            console.log("success > ", data);
            resultBox.textContent = `Get /ajax 요청 완료! ${data.name}님의 성별은 ${data.gender}네요~`;
          },
        });
      }

      function ajaxPost() {
        console.log("ajaxPost 함수 호출!");

        // 폼 선택
        const form = document.forms["register"];

        // 요청에 실어서 보낼 데이터 변수 (서버에서 받을 정보)
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // Ajax로 서버에 Post 요청 보내기
        $.ajax({
          type: "post", // 요청의 종류 (=form의 method 속성)
          url: "/ajax", // 요청의 경로 (=form의 action 속성)
          data: data, // 요청에 실어보낼 데이터
          success: function (data) {
            // 요청이 성공적으로 수행되었을 때 실행 될 함수
            console.log("success > ", data);
            resultBox.textContent = `Post /ajax 요청 완료! ${data.name}님의 성별은 ${data.gender}네요~`;
          },
        });
      }

      async function axiosGet() {
        console.log("axiosGet 함수 호출!");

        // 폼 선택
        const form = document.forms["register"];

        // 요청에 실어서 보낼 데이터 변수 (서버에서 받을 정보)
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // axios 요청의 결과는 Promise 객체
        // then-catch 메소드로 체이닝 가능
        // async/await 도 사용 가능

        // axios({
        //   method: "get",
        //   url: "/axios",
        //   params: data,
        // })
        //   .then((response) => {
        //     console.log(response); // 서버의 응답 결과 (response.data : 응답 데이터)
        //     resultBox.textContent = `Get /axios 요청 완료! ${response.data.name}님의 성별은 ${response.data.gender}네요~`;
        //   })
        //   .catch((error) => {
        //     console.log("error", error);
        //   });

        // 퀴즈.async/await으로 변경하기
        try {
          const response = await axios({
            method: "get",
            // url: "/axios",
            // params: data,
            url: `/axios?name=${data.name}&gender=${data.gender}`, // params 키를 사용하지 않고 쿼리 스트링을 직접 정의해서 요청을 보낼 수도 있음
          });

          const { name, gender } = response.data;
          resultBox.textContent = `Get /axios 요청 완료! ${name}님의 성별은 ${gender}네요~`;
        } catch (err) {
          resultBox.textContent = "에러 발생! 다시 시도해 주세요~";
          console.log(err);
        }
      }

      async function axiosPost() {
        console.log("axiosPost 함수 호출!");

        // 폼 선택
        const form = document.forms["register"];

        // 요청에 실어서 보낼 데이터 변수 (서버에서 받을 정보)
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };
        // axios 요청의 결과는 Promise 객체
        // then-catch 메소드로 체이닝 가능
        // async/await 도 사용 가능

        axios({
          method: "post",
          url: "/axios",
          data: data,
        })
          .then((response) => {
            console.log(response); // 서버의 응답 결과 (response.data : 응답 데이터)
            resultBox.textContent = `Post /axios 요청 완료! ${response.data.name}님의 성별은 ${response.data.gender}네요~`;
          })
          .catch((error) => {
            console.log("error", error);
          });

        // 퀴즈.async/await으로 변경하기
        // try {
        //   const response = await axios({
        //     method: "get",
        //     url: "/axios",
        //     params: data,
        //   });

        //   const { name, gender } = response.data;
        //   resultBox.textContent = `Get /axios 요청 완료! ${name}님의 성별은 ${gender}네요~`;
        // } catch (err) {
        //   resultBos.textContent = "에러 발생! 다시 시도해 주세요~";
        //   console.log(err);
        // }
      }

      function fetchGet() {
        console.log("fetchGet 함수 호출!");

        // 폼 선택
        const form = document.forms["register"];

        // 요청에 실어서 보낼 데이터 변수 (서버에서 받을 정보)
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // fetch는 defalut로 get 방식으로 작동 (생략 가능)
        fetch(`/fetch?name=${data.name}&gender=${data.gender}`)
          .then((response) => {
            console.log(response);
            // JSON 형태로 응답 데이터를 전달받음. 응답 객체는 json() 메소드를 제공
            // 응답 객체로부터 JSON 포맷의 응답 전문을 자바스크립트 객체로 변환
            return response.json();
          })
          .then((data) => {
            console.log(data);
            resultBox.textContent = `Get /fetch 요청 완료! ${data.name}님의 성별은 ${data.gender}네요~`;
          });
      }

      function fetchPost() {
        console.log("fetchPost 함수 호출!");

        // 폼 선택
        const form = document.forms["register"];

        // 요청에 실어서 보낼 데이터 변수 (서버에서 받을 정보)
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // fetch를 이용해 post 요청을 보낼 때는 option 객체가 필요함!
        // 1. method 키 post 지정
        // 2. header 키 JSON 포맷 사용 선언
        // 3. body 키 서버로 보낼 데이터 지정
        fetch("/fetch", {
          method: "post",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data), // js obj -> json
        })
          .then((response) => {
            console.log(response);
            return response.json();
          })
          .then((data) => {
            resultBox.textContent = `Post /fetch 요청 완료! ${data.name}님의 성별은 ${data.gender}네요~`;
          });
      }

      async function axiosGetPractice1() {
        console.log("axiosGetPractice1 함수 호출!");

        // 폼 선택
        const form = document.forms["practice"];
        // console.log(form.interest.value); // 출력 X

        // case 1. filter, map 반복문 사용
        // Array.form(arrayLike) : 유사 배열 객체를 배열로 변환해준다
        // const interests = Array.from(form.interest)
        //   .filter((element) => element.checked == true)
        //   .map((element) => element.value);
        // console.log(interests);

        // NodeList의 메소드 forEach 사용
        // case 2. forEach 반복문 사용
        const interests = [];
        form.interest.forEach((element) => {
          if (element.checked) {
            interests.push(element.value);
          }
        });
        console.log(interests);

        // 요청에 실어서 보낼 데이터 변수 (서버에서 받을 정보)
        const data = {
          name: form.name.value,
          gender: form.gender.value,
          year: form.year.value,
          month: form.month.value,
          day: form.day.value,
          interest: interests,
        };

        // axios 요청
        axios({
          method: "get",
          url: "/practice",
          params: data,
        })
          .then((response) => {
            console.log(response.data);
            practiceResult.textContent = `Get /axios 요청 완료! 이름: ${response.data.name}, 성별: ${response.data.gender}, 생년월일: ${response.data.year}년 ${response.data.month}월 ${response.data.day}일, 관심사: ${response.data.interest}`;
          })
          .catch((error) => {
            console.log("error", error);
          });
      }

      async function axiosPostPractice1() {
        console.log("axios post 함수 호출!");

        // 폼 선택
        const form = document.forms["login"];

        // 요청에 실어서 보낼 데이터 변수
        const data = {
          username: data.username.value,
          password: data.password.value,
        };
      }

      function clickLogin() {
        const form = document.forms["login"];
        const data = {
          username: form.username.value,
          password: form.password.value,
        };

        axios({
          method: "post",
          url: "login",
          data: data,
        }).then((res) => {
          console.log(res.data);
          if (res.data.isSuccess) {
            loginResult.textContent = `${res.data.userInfo.username}님! 로그인 성공!`;
            loginResult.classList.remove("error");
            loginResult.classList.add("success");
          } else {
            loginResult.textContent = "아이디 또는 패스워드 오류";
            loginResult.classList.remove("success");
            loginResult.classList.add("error");
          }
        });
      }
    </script>
  </body>
</html>
